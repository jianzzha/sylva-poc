apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  name: assisted-service
  namespace: assisted-installer
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: assisted-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        agent-install.openshift.io/config-hash: ac2ec9d05c98fedf1b85a49b0d94f91788fee6ea66f87722867c1bab6be25a88
        agent-install.openshift.io/mirror-hash: ""
        agent-install.openshift.io/user-config-hash: ""
      creationTimestamp: null
      labels:
        app: assisted-service
      name: assisted-service
    spec:
      containers:
      - env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: db.host
              name: postgres
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: db.name
              name: postgres
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              key: db.password
              name: postgres
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              key: db.port
              name: postgres
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: db.user
              name: postgres
        - name: EC_PUBLIC_KEY_PEM
          valueFrom:
            secretKeyRef:
              key: ec-public-key.pem
              name: assisted-servicelocal-auth
        - name: EC_PRIVATE_KEY_PEM
          valueFrom:
            secretKeyRef:
              key: ec-private-key.pem
              name: assisted-servicelocal-auth
        envFrom:
        - configMapRef:
            name: assisted-service
        image: quay.io/edge-infrastructure/assisted-service@sha256:0b4dd48807e19d15c14efb8b49f0c00fe7ac440bb615e1fb269a24d314e01465
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8090
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: assisted-service
        ports:
        - containerPort: 8090
          protocol: TCP
        - containerPort: 8091
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8090
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: bucket-filesystem
        - mountPath: /etc/assisted-tls-config
          name: tls-certs
        - mountPath: /etc/assisted-ingress-cert
          name: ingress-cert
      - env:
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: db.name
              name: postgres
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: db.user
              name: postgres
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: db.password
              name: postgres
        image: quay.io/sclorg/postgresql-12-c8s:latest
        imagePullPolicy: Always
        name: postgres
        ports:
        - containerPort: 5432
          name: postgres
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 400Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgresdb
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: assisted-service
      serviceAccountName: assisted-service
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
      - effect: NoSchedule
        key: node.kubernetes.io/memory-pressure
        operator: Exists
      volumes:
      - name: bucket-filesystem
        persistentVolumeClaim:
          claimName: assisted-service
      - name: postgresdb
        persistentVolumeClaim:
          claimName: postgres
      - name: tls-certs
        secret:
          defaultMode: 420
          secretName: assisted-service
      - secret:
          defaultMode: 420
          secretName: default-ingress-cert
        name: ingress-cert

